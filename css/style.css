/* general stuff */

:root {
    --cubie-size: min(120px, 18vw);
    --face-background-color: #505050;
    --background-color: black;
    --help-color: rgba(0, 0, 0, 0.9);
    --light-color: #ffffe0;
    --font-color: white;
    --cube-rotation-speed: 150ms;
    --zoom-speed: 100ms;
    --hover-speed: 80ms;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: var(--background-color);
    color: var(--font-color);
}

/* help */

#help {
    padding: 10px;
    font-family: "Courier New", Courier, monospace;
    font-size: 22px;
    position: absolute;
    top: 0px;
    left: 0px;
    z-index: 1;
}

#helpToggler {
    display: none;
}

#helpContent {
    background-color: var(--help-color);
    box-shadow: 0px 0px 20px var(--background-color);
    display: none;
}

#helpToggler:checked ~ label i {
    opacity: 1 !important;
}

#helpToggler:checked ~ #helpContent {
    display: block;
}

#help i {
    opacity: 0.6;
    cursor: pointer;
}

#help i:hover {
    opacity: 1;
}

#helpContent p {
    margin-top: 10px;
}

#helpContent strong {
    color: skyblue;
}

/* stage */

#stage {
    min-height: 100vh;
    perspective: calc(10 * var(--cubie-size));
    transform-style: preserve-3d;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: transform linear;
    transition-duration: var(--zoom-speed);
}

/* cube */

#cube {
    transform-style: inherit;
    transform: rotateX(-45deg) rotateY(45deg);
    transition: transform var(--cube-rotation-speed) ease-in-out;
}

#cube.transparent {
    --face-background-color: transparent;
}

#cube.transparent .face {
    opacity: 0.85;
}

/* solved state */

#stage.solved .face {
    box-shadow: 0px 0px calc(0.15 * var(--cubie-size))
        var(--light-color);
}

/* rotation layer */

#cubeContainer {
    transform-style: inherit;
}

#rotationLayer {
    transition: transform ease-in-out;
    transition-duration: 250ms;
    transform-style: inherit;
}

/* cubie */

.cubie {
    width: 0%;
    height: 0%;
    transform-style: inherit;
    position: absolute;
}

.cubie .face {
    position: absolute;
    width: var(--cubie-size);
    height: var(--cubie-size);
    background: var(--face-background-color);
    display: flex;
    justify-content: center;
    align-items: center;
    transition: box-shadow ease-in;
    transition-duration: var(--hover-speed);
}

.cubie .face::before {
    content: "";
    width: 92%;
    height: 92%;
    border-radius: calc(0.1 * var(--cubie-size));
    background: var(--color);
}

.cubie:hover .face {
    box-shadow: 0px 0px calc(0.3 * var(--cubie-size))
        var(--light-color);
}

/* 6 faces */

.cubie .face.front {
    transform: translateX(-50%) translateY(-50%)
        translateZ(calc(0.5 * var(--cubie-size)));
}

.cubie .face.back {
    transform: translateX(-50%) translateY(-50%)
        translateZ(calc(-0.5 * var(--cubie-size)));
}

.cubie .face.left {
    transform: translateX(calc(-50% + (-0.5) * var(--cubie-size)))
        translateY(-50%) rotateY(-90deg);
}

.cubie .face.right {
    transform: translateX(calc(-50% + (0.5) * var(--cubie-size)))
        translateY(-50%) rotateY(90deg);
}

.cubie .face.top {
    transform: translateX(-50%)
        translateY(calc(-50% + (-0.5) * var(--cubie-size)))
        rotateX(90deg);
}

.cubie .face.bottom {
    transform: translateX(-50%)
        translateY(calc(-50% + 0.5 * var(--cubie-size)))
        rotateX(90deg);
}

/* mobile devices */

.for-mobile {
    display: none;
}

@media (pointer: none), (pointer: coarse) {
    .for-mobile {
        display: block;
    }
    .for-desktop {
        display: none;
    }
}
