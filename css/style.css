/* general stuff */

:root {
    --cubie-size: min(100px, 18vw);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: black;
    color: white;
    overflow: hidden;
}

/* help */

#help {
    padding: 10px;
    font-family: "Courier New", Courier, monospace;
    font-size: 22px;
    position: absolute;
    top: 0px;
    left: 0px;
    z-index: 1;
}

#helpToggler {
    display: none;
}

#helpContent {
    background-color: rgba(0, 0, 0, 0.95);
    box-shadow: 0px 0px 20px black;
    transform-origin: top;
    display: none;
}

#helpToggler:checked ~ label i {
    opacity: 1 !important;
}

#helpToggler:checked ~ #helpContent {
    display: block;
}

#help i {
    opacity: 0.6;
    cursor: pointer;
}

#help i:hover {
    opacity: 1;
}

#helpContent p {
    margin-top: 10px;
}

/* main */

main {
    transition: transform 100ms linear;
}

/* stage */

#stage {
    min-height: 100vh;
    perspective: calc(10 * var(--cubie-size));
    transform-style: preserve-3d;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* cube */

#cube {
    transform-style: inherit;
    transform: rotateX(-45deg) rotateY(45deg);
    transition: transform 150ms ease-in-out;
}

/* cubie */

.cubie {
    width: 0%;
    height: 0%;
    transform-style: inherit;
}

/* only for debugging */
.cubie.selected .face {
    background: brown;
}

.cubieContainer {
    transform-style: inherit;
    position: absolute;
    transition: transform 250ms ease-in-out;
}

.cubie .face {
    position: absolute;
    width: var(--cubie-size);
    height: var(--cubie-size);
    background: #555;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: box-shadow 100ms ease;
}

.cubie .face::before {
    content: "";
    width: 92%;
    height: 92%;
    border-radius: calc(0.1 * var(--cubie-size));
    background: var(--color);
}

.cubie:hover .face {
    box-shadow: 0px 0px calc(0.3 * var(--cubie-size)) white;
}

/* selected cubie */

.cubie.selected .face {
    background: black;
}

/* 6 faces */

.cubie .face.front {
    transform: translateX(-50%) translateY(-50%)
        translateZ(calc(0.5 * var(--cubie-size)));
}

.cubie .face.back {
    transform: translateX(-50%) translateY(-50%)
        translateZ(calc(-0.5 * var(--cubie-size)));
}

.cubie .face.left {
    transform: translateX(calc(-50% + (-0.5) * var(--cubie-size)))
        translateY(-50%) rotateY(-90deg);
}

.cubie .face.right {
    transform: translateX(calc(-50% + (0.5) * var(--cubie-size)))
        translateY(-50%) rotateY(90deg);
}

.cubie .face.top {
    transform: translateX(-50%)
        translateY(calc(-50% + (-0.5) * var(--cubie-size)))
        rotateX(90deg);
}

.cubie .face.bottom {
    transform: translateX(-50%)
        translateY(calc(-50% + 0.5 * var(--cubie-size)))
        rotateX(90deg);
}

/* cubies in first layer */

#w {
    transform: translateY(calc((-1) * var(--cubie-size)));
}

#wb {
    transform: translateY(calc((-1) * var(--cubie-size)))
        translateZ(var(--cubie-size));
}

#wbr {
    transform: translateY(calc((-1) * var(--cubie-size)))
        translateX(calc((-1) * var(--cubie-size)))
        translateZ(var(--cubie-size));
}

#wbo {
    transform: translateX(var(--cubie-size))
        translateY(calc((-1) * var(--cubie-size)))
        translateZ(var(--cubie-size));
}

#wo {
    transform: translateX(var(--cubie-size))
        translateY(calc((-1) * var(--cubie-size)));
}

#wog {
    transform: translateX(var(--cubie-size))
        translateY(calc((-1) * var(--cubie-size)))
        translateZ(calc((-1) * var(--cubie-size)));
}

#wg {
    transform: translateY(calc((-1) * var(--cubie-size)))
        translateZ(calc((-1) * var(--cubie-size)));
}

#wgr {
    transform: translateX(calc((-1) * var(--cubie-size)))
        translateY(calc((-1) * var(--cubie-size)))
        translateZ(calc((-1) * var(--cubie-size)));
}

#wr {
    transform: translateX(calc((-1) * var(--cubie-size)))
        translateY(calc((-1) * var(--cubie-size)));
}

/* cubies in second layer */

#b {
    transform: translateZ(var(--cubie-size));
}

#bo {
    transform: translateX(var(--cubie-size))
        translateZ(var(--cubie-size));
}

#br {
    transform: translateX(calc((-1) * var(--cubie-size)))
        translateZ(var(--cubie-size));
}

#r {
    transform: translateX(calc((-1) * var(--cubie-size)));
}

#o {
    transform: translateX(var(--cubie-size));
}

#og {
    transform: translateX(var(--cubie-size))
        translateZ(calc((-1) * var(--cubie-size)));
}

#rg {
    transform: translateX(calc((-1) * var(--cubie-size)))
        translateZ(calc((-1) * var(--cubie-size)));
}

#g {
    transform: translateZ(calc((-1) * var(--cubie-size)));
}

/* cubies in third layer */

#y {
    transform: translateY(var(--cubie-size));
}

#yb {
    transform: translateY(var(--cubie-size))
        translateZ(var(--cubie-size));
}

#ybr {
    transform: translateY(var(--cubie-size))
        translateX(calc((-1) * var(--cubie-size)))
        translateZ(var(--cubie-size));
}

#ybo {
    transform: translateX(var(--cubie-size))
        translateY(var(--cubie-size)) translateZ(var(--cubie-size));
}

#yo {
    transform: translateX(var(--cubie-size))
        translateY(var(--cubie-size));
}

#yog {
    transform: translateX(var(--cubie-size))
        translateY(var(--cubie-size))
        translateZ(calc((-1) * var(--cubie-size)));
}

#yg {
    transform: translateY(var(--cubie-size))
        translateZ(calc((-1) * var(--cubie-size)));
}

#ygr {
    transform: translateX(calc((-1) * var(--cubie-size)))
        translateY(var(--cubie-size))
        translateZ(calc((-1) * var(--cubie-size)));
}

#yr {
    transform: translateX(calc((-1) * var(--cubie-size)))
        translateY(var(--cubie-size));
}
